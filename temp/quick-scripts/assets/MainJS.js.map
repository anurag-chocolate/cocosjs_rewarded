{"version":3,"sources":["MainJS.js"],"names":["VDOPIA_API_KEY","isUpdateUiNeeded","isRewardAdLoaded","isRewardAdCompleted","cc","Class","extends","Component","properties","show_ad","Button","onLoad","console","log","hookInput","setupVdopiaAd","update","dt","updateUIFun","sys","platform","ANDROID","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","kcode","e","KEY","back","director","end","node","VdopiaAd","require","prototype","callbackFunction","vdopiaCallback","setAdRequestUserData","setAdRequestAppData","prefetchRewardAd","onclick","loadRewardAd","adType","adEvent","VdopiaGlobal","REWARD_AD_LOADED","showRewardAd","REWARD_AD_COMPLETED"],"mappings":"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","file":"MainJS.js","sourceRoot":"../../../assets","sourcesContent":["var VDOPIA_API_KEY =\"EnP5f4\";\nvar isUpdateUiNeeded = false;\nvar isRewardAdLoaded = false;\nvar isRewardAdCompleted = false;\n\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n\t\tshow_ad : cc.Button\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\t\t//this.loadad();\nconsole.log(\"onload\");\n\t\t /*var hideAction1 = cc.hide();        //Hiding reward dialog initially\n        this.show_ad.node.runAction(hideAction1);*/\n\t\t\n\t\t\n\t\tthis.hookInput();\n        this.setupVdopiaAd();\n\t\t   isUpdateUiNeeded = true;            //Update UI using update method\n         isRewardAdLoaded = false;\n        isRewardAdCompleted = false;\n\t\t\n\t\t\n\n    },\n\t\n\tupdate: function (dt) {\n        if (isUpdateUiNeeded) {\n            isUpdateUiNeeded = false;\n            this.updateUIFun();\n        }\n\t\t},\n\t\t\n\t\t hookInput: function () {\n        if (cc.sys.platform == cc.sys.ANDROID) {\n            cc.eventManager.addListener({\n                event: cc.EventListener.KEYBOARD,\n                onKeyPressed: function (kcode, e) {\n                    console.log(\"KEY : \" + kcode + \" == \" + cc.KEY.back);\n                    if (kcode == cc.KEY.back) {\n                        cc.director.end();\n                    }\n                },\n            }, this.node);\n        }\n    },\n\t\t\n\t\tsetupVdopiaAd: function () {\n        if (this.VdopiaAd) {\n            console.log(\"Vdopia Plugin Already Initialized...\");\n        } else {\n            console.log(\"Vdopia Plugin Not Initialized...\");\n\n            this.VdopiaAd = require('VdopiaPlugin');        //Init VdopiaPlugin\n\n            //Set Ad Event Receiver function for listening Vdopia SDK Ad Event\n            this.VdopiaAd.prototype.callbackFunction = this.vdopiaCallback;\n\n            //Set USER parameter used for better Ad targeting and higher yield (Not Complsory)\n            //Developer can pass empty string for any Param like \"\"\n            //Param 1 : Age\n            //Param 2 : BirthDate (dd/MM/yyyy)\n            //Param 3 : Gender (m/f/u)\n            //Param 4 : Marital Status (single/married/unknown)\n            //Param 5 : Ethinicty (example : Africans/Asian/Russians)\n            //Param 6 : DMA Code (in String format)\n            //Param 7 : Postal Code (in String format)\n            //Param 8 : Current Postal Code (in String format)\n            //Param 9 : Location latitude in string format\n            //Param 10 : Location longitude in string format\n            this.VdopiaAd.prototype.setAdRequestUserData(\"23\", \"23/11/1990\", \"m\", \"single\", \"Asian\",\n                    \"999\", \"123123\", \"321321\", \"28.70\", \"77.10\");\n\n            //Set APP parameter used better Ad targeting and higher yield (Not Complsory)\n            //Developer can pass empty string for any Param like \"\"\n            //Param 1 : App Name\n            //Param 2 : Publisher Name\n            //Param 3 : App Domain\n            //Param 4 : Publisher Domain\n            //Param 5 : PlayStore URL of the App\n            //Param 6 : Ad Category\n            this.VdopiaAd.prototype.setAdRequestAppData(\"CocosDemo\", \"Vdopia\",\n                    \"cocos-demo.com\", \"vdopia.com\", \"\", \"IAB1\");\n\n            //Set Test Mode parameter used for Getting Test AD (Not Complsory)\n            //Param 1 : boolean : true if test mode enabled else false\n            //Param 2 : Hash ID (If you are testing Facebook/Google Partner Test Ad you can get from ADB Logcat)\n            //this.VdopiaAd.prototype.setAdRequestTestMode(true, \"XXXXXXXXXXXXXXXX\");\n\t\t\tthis.VdopiaAd.prototype.prefetchRewardAd(VDOPIA_API_KEY);\n        }\n    },\n\t\n\tonclick:function(){\n\t\t\n\t\tconsole.log(\"uttonClicked\");\n\t\t\n\t\t if (this.VdopiaAd) {\n            this.VdopiaAd.prototype.loadRewardAd(VDOPIA_API_KEY);\n\t\t\t \n        }\n\t\t\n\t\t\n\t\t\n\t},\n\t\n\t\tvdopiaCallback: function (adType, adEvent) {\n        console.log(\"Publisher Event : Ad Type : \" + adType + \" Ad Event : \" + adEvent);\n\n        /*if (adEvent === VdopiaGlobal.INTERSTITIAL_AD_LOADED) {\n            isInterstitialAdLoaded = true;\n            console.log(\"Is Interstitial Ad Loaded...\" + isInterstitialAdLoaded);\n        }*/\n\n        if (adEvent === VdopiaGlobal.REWARD_AD_LOADED) {\n            isRewardAdLoaded = true;\n            console.log(\"Is Reward Ad Loaded...\" + isRewardAdLoaded);\n\t\t\tthis.VdopiaAd = require('VdopiaPlugin');\n\t\t\t\t        if (this.VdopiaAd) {\n            this.VdopiaAd.prototype.showRewardAd(\"qj5ebyZ0F0vzW6yg\", \"Chocolate1\", \"coin\", \"30\");\n            this.VdopiaAd.prototype.prefetchRewardAd(VDOPIA_API_KEY); //prefetch next rewarded ad\n        }\n\t\t\t\n        }\nif (adEvent ===\"REWARD_AD_FAILED\") {\n            isRewardAdLoaded = true;\n            console.log(\"Is Reward Ad Failed...\" + isRewardAdLoaded);\n        }\n\t\t\t\n\t\t\tif (adEvent ===\"REWARD_AD_SHOWN\") {\n            isRewardAdLoaded = true;\n            console.log(\"Is Reward Ad Shown...\" + isRewardAdLoaded);\n\t\t\t\t\n\n        }\n\t\t\t\n\t\t\tif (adEvent ===\"REWARD_AD_SHOWN_ERROR\") {\n            isRewardAdLoaded = true;\n            console.log(\"Is Reward Ad Loaded...\" + isRewardAdLoaded);\n        }\n\t\t\t\n\t\t\tif (adEvent ===\"REWARD_AD_DISMISSED\") {\n            isRewardAdLoaded = true;\n            console.log(\"Is Reward Ad Dismissed...\" + isRewardAdLoaded);\n        }\n        if (adEvent === VdopiaGlobal.REWARD_AD_COMPLETED) {\n            isRewardAdCompleted = true;\n            console.log(\"Is Reward Ad Completed...\" + isRewardAdCompleted);\n\t\t\t\n        }\n\n        isUpdateUiNeeded = true;        //Updating UI based on Ad callback\n    },\n    //Updating the UI as per callback status\n   \t updateUIFun: function () {\n        console.log(\"updateUIFun Called...\");\n        \n        //Enable disable Interstitial Ad related buttons as per Interstitial callback\n       /* if (isInterstitialAdLoaded) {\n            this.loadInterstitialAd.interactable = false;\n            this.showInterstitialAd.interactable = true;\n        } else {\n            this.loadInterstitialAd.interactable = true;\n            this.showInterstitialAd.interactable = false;\n        }*/\n\n   \n    }\n\t\n\n\t\n\t\n\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}